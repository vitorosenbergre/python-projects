
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, ttk
from matplotlib.figure import Figure
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
import pandas as pd
from data import *


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / \
    Path(r"C:\Users\vicor\OneDrive\Área de Trabalho\Tkinter-Designer-master\Tkinter-Designer-master\build\assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("1000x550")
window.configure(bg="#2A2F4F")


canvas = Canvas(
    window,
    bg="#2A2F4F",
    height=550,
    width=1000,
    bd=0,
    highlightthickness=0,
    relief="ridge"
)

canvas.place(x=0, y=0)
canvas.create_rectangle(
    0.0,
    0.0,
    1000.0,
    92.0,
    fill="#D9D9D9",
    outline="")

canvas.create_text(
    85.0,
    28.0,
    anchor="nw",
    text="PyDash",
    fill="#000000",
    font=("Inter Bold", 30 * -1)
)

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    188.0,
    161.0,
    image=image_image_1
)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    188.0,
    372.0,
    image=image_image_2
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    499.0,
    372.0,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    812.0,
    372.0,
    image=image_image_4
)

canvas.create_text(
    91.0,
    136.0,
    anchor="nw",
    text="Revenue",
    fill="#000000",
    font=("Inter Bold", 10 * -1)
)

canvas.create_text(
    250.0,
    169.0,
    anchor="nw",
    text="Past Week",
    fill="#000000",
    font=("Inter Bold", 10 * -1)
)

canvas.create_text(
    87.0,
    155.0,
    anchor="nw",
    text="500,10",
    fill="#000000",
    font=("Inter Bold", 22 * -1)
)

canvas.create_text(
    250.0,
    142.0,
    anchor="nw",
    text="5,8%",
    fill="#000000",
    font=("Inter Bold", 22 * -1)
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
image_5 = canvas.create_image(
    77.0,
    142.0,
    image=image_image_5
)

image_image_6 = PhotoImage(
    file=relative_to_assets("image_6.png"))
image_6 = canvas.create_image(
    231.0,
    157.0,
    image=image_image_6
)

image_image_7 = PhotoImage(
    file=relative_to_assets("image_7.png"))
image_7 = canvas.create_image(
    499.0,
    161.0,
    image=image_image_7
)

canvas.create_text(
    413.0,
    136.0,
    anchor="nw",
    text="Customers",
    fill="#000000",
    font=("Inter Bold", 10 * -1)
)

canvas.create_text(
    572.0,
    169.0,
    anchor="nw",
    text="Past Week",
    fill="#000000",
    font=("Inter Bold", 10 * -1)
)

canvas.create_text(
    409.0,
    155.0,
    anchor="nw",
    text="200,478",
    fill="#000000",
    font=("Inter Bold", 22 * -1)
)

canvas.create_text(
    572.0,
    142.0,
    anchor="nw",
    text="8,1%",
    fill="#000000",
    font=("Inter Bold", 22 * -1)
)

image_image_8 = PhotoImage(
    file=relative_to_assets("image_8.png"))
image_8 = canvas.create_image(
    553.0,
    157.0,
    image=image_image_8
)

image_image_9 = PhotoImage(
    file=relative_to_assets("image_9.png"))
image_9 = canvas.create_image(
    402.0,
    142.0,
    image=image_image_9
)

image_image_10 = PhotoImage(
    file=relative_to_assets("image_10.png"))
image_10 = canvas.create_image(
    812.0,
    161.0,
    image=image_image_10
)

canvas.create_text(
    715.0,
    136.0,
    anchor="nw",
    text="Products Solds",
    fill="#000000",
    font=("Inter Bold", 10 * -1)
)

canvas.create_text(
    874.0,
    169.0,
    anchor="nw",
    text="Past Week",
    fill="#000000",
    font=("Inter Bold", 10 * -1)
)

canvas.create_text(
    711.0,
    155.0,
    anchor="nw",
    text="200,478",
    fill="#000000",
    font=("Inter Bold", 22 * -1)
)

canvas.create_text(
    874.0,
    142.0,
    anchor="nw",
    text="8,1%",
    fill="#000000",
    font=("Inter Bold", 22 * -1)
)

image_image_11 = PhotoImage(
    file=relative_to_assets("image_11.png"))
image_11 = canvas.create_image(
    855.0,
    157.0,
    image=image_image_11
)

image_image_12 = PhotoImage(
    file=relative_to_assets("image_12.png"))
image_12 = canvas.create_image(
    704.0,
    142.0,
    image=image_image_12
)

image_image_13 = PhotoImage(
    file=relative_to_assets("image_13.png"))
image_13 = canvas.create_image(
    55.0,
    43.0,
    image=image_image_13
)

revenue_data = pd.DataFrame(revenue)
revenue_data["date"] = pd.to_datetime(revenue_data["date"])

fig_1 = Figure(figsize=(2.5, 2.2), facecolor="#D9D9D9")
ax_1 = fig_1.add_subplot()
ax_1.fill_between(x=revenue_data["date"], y1=revenue_data["amount"], alpha=0.7)
ax_1.tick_params(labelsize=7, colors="black")
fig_1.autofmt_xdate()
ax_1.plot(revenue_data["date"], revenue_data["amount"], color="deepskyblue")
ax_1.grid(visible=True)

canvas = FigureCanvasTkAgg(figure=fig_1, master=window)
canvas.draw()
canvas.get_tk_widget().place(x=70, y=250)

# Circular Bar Chart

fig_2 = Figure(figsize=(2.5, 2.2), facecolor="#D9D9D9")
ax_2 = fig_2.add_subplot(projection="polar")
ax_2.set_facecolor("#D9D9D9")
ax_2.bar(x=sales["angles"], height=sales["revenue"], color=sales["colors"])
ax_2.set_frame_on(False)
ax_2.set_xticks([])
ax_2.tick_params(labelsize=2, colors="white")
ax_2.grid(alpha=0.7)

for angle, label, rotation in zip(sales["angles"], sales["products"], sales["rotation"]):
    ax_2.text(x=angle, y=max(sales["revenue"]) + 30, s=label,
              rotation=rotation, ha="center", va="center", color="black", fontsize=8)

canvas = FigureCanvasTkAgg(figure=fig_2, master=window)
canvas.draw()
canvas.get_tk_widget().place(x=685, y=253)

# Table

table = ttk.Treeview(master=window, columns=table_columns, show="headings")

for column in table_columns:
    table.heading(column=column, text=column)
    table.column(column=column, width=70)

for row_data in table_data:
    table.insert(parent="", index="end", values=row_data)

style = ttk.Style()
style.theme_use("default")
style.configure("Treeview", background="#D9D9D9",
                fieldbackground="#D9D9D9", foreground="black")
style.configure("Treeview.Heading", background="#D9D9D9",
                fieldbackground="#D9D9D9", foreground="black")
style.map("Treeview", background=[("selected", "#D9D9D9")])

table.place(x=395, y=240, height=260)

window.resizable(False, False)
window.mainloop()
